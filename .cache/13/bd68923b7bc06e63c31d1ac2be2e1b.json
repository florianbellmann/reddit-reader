{"id":"parser.ts","dependencies":[{"name":"/Users/florianj/Private/reddit-reader/tsconfig.json","includedInParent":true,"mtime":1565796004266},{"name":"/Users/florianj/Private/reddit-reader/package.json","includedInParent":true,"mtime":1570908198480},{"name":"./feed.urls","loc":{"line":12,"column":28},"parent":"/Users/florianj/Private/reddit-reader/src/parser.ts","resolved":"/Users/florianj/Private/reddit-reader/src/feed.urls.ts"},{"name":"rss-parser","loc":{"line":13,"column":21},"parent":"/Users/florianj/Private/reddit-reader/src/parser.ts","resolved":"/Users/florianj/Private/reddit-reader/node_modules/rss-parser/index.js"}],"generated":{"js":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst feed_urls_1 = require(\"./feed.urls\");\n\nlet Parser = require('rss-parser');\n\nclass RedditRSSParser {\n  constructor() {\n    this.CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n    this._feedUrls = feed_urls_1.FeedUrls;\n    this._parser = new Parser();\n  }\n\n  getFeedData() {\n    return this.parseUrls();\n  }\n\n  parseUrls() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const rssPromises = [];\n\n      this._feedUrls.forEach(feedUrl => __awaiter(this, void 0, void 0, function* () {\n        rssPromises.push(new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n          try {\n            yield this._parser.parseURL(`${this.CORS_PROXY}${feedUrl}`);\n            resolve();\n          } catch (error) {\n            reject(error);\n          }\n        })));\n      }));\n\n      yield Promise.all(rssPromises);\n    });\n  }\n\n}\n\nexports.RedditRSSParser = RedditRSSParser;"},"sourceMaps":{"js":{"mappings":[{"source":"parser.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":39,"column":0}},{"source":"parser.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":39,"column":6}},{"source":"parser.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":39,"column":17}},{"source":"parser.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":39,"column":20}},{"source":"parser.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":39,"column":27}},{"source":"parser.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":39,"column":28}},{"source":"parser.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":39,"column":41}},{"source":"parser.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":39,"column":42}},{"source":"parser.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":41,"column":0}},{"source":"parser.ts","name":null,"original":{"line":2,"column":4},"generated":{"line":41,"column":4}},{"source":"parser.ts","name":null,"original":{"line":2,"column":10},"generated":{"line":41,"column":10}},{"source":"parser.ts","name":null,"original":{"line":2,"column":13},"generated":{"line":41,"column":13}},{"source":"parser.ts","name":null,"original":{"line":2,"column":20},"generated":{"line":41,"column":20}},{"source":"parser.ts","name":null,"original":{"line":2,"column":21},"generated":{"line":41,"column":21}},{"source":"parser.ts","name":null,"original":{"line":2,"column":20},"generated":{"line":41,"column":33}},{"source":"parser.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":41,"column":34}},{"source":"parser.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":43,"column":0}},{"source":"parser.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":43,"column":6}},{"source":"parser.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":43,"column":21}},{"source":"parser.ts","name":null,"original":{"line":5,"column":28},"generated":{"line":43,"column":22}},{"source":"parser.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":44,"column":0}},{"source":"parser.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":44,"column":2}},{"source":"parser.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":44,"column":13}},{"source":"parser.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":44,"column":16}},{"source":"parser.ts","name":null,"original":{"line":6,"column":19},"generated":{"line":45,"column":0}},{"source":"parser.ts","name":null,"original":{"line":6,"column":19},"generated":{"line":45,"column":9}},{"source":"parser.ts","name":null,"original":{"line":6,"column":19},"generated":{"line":45,"column":19}},{"source":"parser.ts","name":null,"original":{"line":6,"column":32},"generated":{"line":45,"column":22}},{"source":"parser.ts","name":null,"original":{"line":6,"column":19},"generated":{"line":45,"column":60}},{"source":"parser.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":46,"column":0}},{"source":"parser.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":46,"column":9}},{"source":"parser.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":46,"column":18}},{"source":"parser.ts","name":null,"original":{"line":11,"column":21},"generated":{"line":46,"column":21}},{"source":"parser.ts","name":null,"original":{"line":11,"column":21},"generated":{"line":46,"column":32}},{"source":"parser.ts","name":null,"original":{"line":11,"column":21},"generated":{"line":46,"column":33}},{"source":"parser.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":46,"column":41}},{"source":"parser.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":47,"column":0}},{"source":"parser.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":47,"column":9}},{"source":"parser.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":47,"column":16}},{"source":"parser.ts","name":null,"original":{"line":12,"column":19},"generated":{"line":47,"column":19}},{"source":"parser.ts","name":null,"original":{"line":12,"column":23},"generated":{"line":47,"column":23}},{"source":"parser.ts","name":null,"original":{"line":12,"column":19},"generated":{"line":47,"column":29}},{"source":"parser.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":47,"column":31}},{"source":"parser.ts","name":null,"original":{"line":13,"column":3},"generated":{"line":48,"column":0}},{"source":"parser.ts","name":null,"original":{"line":15,"column":9},"generated":{"line":50,"column":0}},{"source":"parser.ts","name":null,"original":{"line":15,"column":9},"generated":{"line":50,"column":2}},{"source":"parser.ts","name":null,"original":{"line":15,"column":20},"generated":{"line":50,"column":13}},{"source":"parser.ts","name":null,"original":{"line":15,"column":20},"generated":{"line":50,"column":16}},{"source":"parser.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":51,"column":0}},{"source":"parser.ts","name":null,"original":{"line":16,"column":12},"generated":{"line":51,"column":11}},{"source":"parser.ts","name":null,"original":{"line":16,"column":17},"generated":{"line":51,"column":16}},{"source":"parser.ts","name":null,"original":{"line":16,"column":12},"generated":{"line":51,"column":25}},{"source":"parser.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":51,"column":27}},{"source":"parser.ts","name":null,"original":{"line":17,"column":3},"generated":{"line":52,"column":0}},{"source":"parser.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":54,"column":0}},{"source":"parser.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":54,"column":2}},{"source":"parser.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":54,"column":11}},{"source":"parser.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":54,"column":14}},{"source":"parser.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":56,"column":0}},{"source":"parser.ts","name":null,"original":{"line":20,"column":10},"generated":{"line":56,"column":12}},{"source":"parser.ts","name":null,"original":{"line":20,"column":21},"generated":{"line":56,"column":23}},{"source":"parser.ts","name":null,"original":{"line":20,"column":44},"generated":{"line":56,"column":26}},{"source":"parser.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":56,"column":28}},{"source":"parser.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":58,"column":0}},{"source":"parser.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":58,"column":11}},{"source":"parser.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":58,"column":20}},{"source":"parser.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":58,"column":21}},{"source":"parser.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":58,"column":28}},{"source":"parser.ts","name":null,"original":{"line":22,"column":34},"generated":{"line":58,"column":29}},{"source":"parser.ts","name":null,"original":{"line":22,"column":27},"generated":{"line":58,"column":36}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":40}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":49}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":50}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":54}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":56}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":61}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":62}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":64}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":69}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":70}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":72}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":58,"column":85}},{"source":"parser.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":59,"column":0}},{"source":"parser.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":59,"column":8}},{"source":"parser.ts","name":null,"original":{"line":23,"column":17},"generated":{"line":59,"column":19}},{"source":"parser.ts","name":null,"original":{"line":23,"column":18},"generated":{"line":59,"column":20}},{"source":"parser.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":59,"column":24}},{"source":"parser.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":59,"column":25}},{"source":"parser.ts","name":null,"original":{"line":24,"column":12},"generated":{"line":59,"column":29}},{"source":"parser.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":59,"column":36}},{"source":"parser.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":59,"column":37}},{"source":"parser.ts","name":null,"original":{"line":24,"column":27},"generated":{"line":59,"column":38}},{"source":"parser.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":59,"column":45}},{"source":"parser.ts","name":null,"original":{"line":24,"column":36},"generated":{"line":59,"column":47}},{"source":"parser.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":59,"column":53}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":58}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":67}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":68}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":72}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":74}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":79}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":80}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":82}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":87}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":88}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":90}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":59,"column":103}},{"source":"parser.ts","name":null,"original":{"line":25,"column":10},"generated":{"line":60,"column":0}},{"source":"parser.ts","name":null,"original":{"line":25,"column":14},"generated":{"line":60,"column":14}},{"source":"parser.ts","name":null,"original":{"line":26,"column":12},"generated":{"line":61,"column":0}},{"source":"parser.ts","name":null,"original":{"line":26,"column":18},"generated":{"line":61,"column":18}},{"source":"parser.ts","name":null,"original":{"line":26,"column":23},"generated":{"line":61,"column":23}},{"source":"parser.ts","name":null,"original":{"line":26,"column":18},"generated":{"line":61,"column":30}},{"source":"parser.ts","name":null,"original":{"line":26,"column":31},"generated":{"line":61,"column":31}},{"source":"parser.ts","name":null,"original":{"line":26,"column":18},"generated":{"line":61,"column":39}},{"source":"parser.ts","name":null,"original":{"line":26,"column":40},"generated":{"line":61,"column":40}},{"source":"parser.ts","name":null,"original":{"line":26,"column":43},"generated":{"line":61,"column":43}},{"source":"parser.ts","name":null,"original":{"line":26,"column":48},"generated":{"line":61,"column":48}},{"source":"parser.ts","name":null,"original":{"line":26,"column":58},"generated":{"line":61,"column":58}},{"source":"parser.ts","name":null,"original":{"line":26,"column":61},"generated":{"line":61,"column":61}},{"source":"parser.ts","name":null,"original":{"line":26,"column":68},"generated":{"line":61,"column":68}},{"source":"parser.ts","name":null,"original":{"line":26,"column":18},"generated":{"line":61,"column":70}},{"source":"parser.ts","name":null,"original":{"line":26,"column":12},"generated":{"line":61,"column":71}},{"source":"parser.ts","name":null,"original":{"line":27,"column":12},"generated":{"line":62,"column":0}},{"source":"parser.ts","name":null,"original":{"line":27,"column":12},"generated":{"line":62,"column":12}},{"source":"parser.ts","name":null,"original":{"line":27,"column":19},"generated":{"line":62,"column":19}},{"source":"parser.ts","name":null,"original":{"line":28,"column":11},"generated":{"line":63,"column":0}},{"source":"parser.ts","name":null,"original":{"line":25,"column":10},"generated":{"line":63,"column":11}},{"source":"parser.ts","name":null,"original":{"line":28,"column":12},"generated":{"line":63,"column":12}},{"source":"parser.ts","name":null,"original":{"line":28,"column":19},"generated":{"line":63,"column":19}},{"source":"parser.ts","name":null,"original":{"line":28,"column":12},"generated":{"line":63,"column":24}},{"source":"parser.ts","name":null,"original":{"line":28,"column":26},"generated":{"line":63,"column":26}},{"source":"parser.ts","name":null,"original":{"line":29,"column":12},"generated":{"line":64,"column":0}},{"source":"parser.ts","name":null,"original":{"line":29,"column":12},"generated":{"line":64,"column":12}},{"source":"parser.ts","name":null,"original":{"line":29,"column":18},"generated":{"line":64,"column":18}},{"source":"parser.ts","name":null,"original":{"line":29,"column":19},"generated":{"line":64,"column":19}},{"source":"parser.ts","name":null,"original":{"line":29,"column":18},"generated":{"line":64,"column":24}},{"source":"parser.ts","name":null,"original":{"line":29,"column":12},"generated":{"line":64,"column":25}},{"source":"parser.ts","name":null,"original":{"line":30,"column":11},"generated":{"line":65,"column":0}},{"source":"parser.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":66,"column":0}},{"source":"parser.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":66,"column":9}},{"source":"parser.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":66,"column":10}},{"source":"parser.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":66,"column":11}},{"source":"parser.ts","name":null,"original":{"line":33,"column":5},"generated":{"line":67,"column":0}},{"source":"parser.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":67,"column":7}},{"source":"parser.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":67,"column":8}},{"source":"parser.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":69,"column":0}},{"source":"parser.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":69,"column":12}},{"source":"parser.ts","name":null,"original":{"line":35,"column":17},"generated":{"line":69,"column":19}},{"source":"parser.ts","name":null,"original":{"line":35,"column":18},"generated":{"line":69,"column":20}},{"source":"parser.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":69,"column":23}},{"source":"parser.ts","name":null,"original":{"line":35,"column":22},"generated":{"line":69,"column":24}},{"source":"parser.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":69,"column":35}},{"source":"parser.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":69,"column":36}},{"source":"parser.ts","name":null,"original":{"line":36,"column":3},"generated":{"line":70,"column":0}},{"source":"parser.ts","name":null,"original":{"line":36,"column":3},"generated":{"line":71,"column":0}},{"source":"parser.ts","name":null,"original":{"line":5,"column":28},"generated":{"line":73,"column":0}},{"source":"parser.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":75,"column":0}},{"source":"parser.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":75,"column":7}},{"source":"parser.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":75,"column":8}},{"source":"parser.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":75,"column":23}},{"source":"parser.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":75,"column":26}},{"source":"parser.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":75,"column":41}}],"sources":{"parser.ts":"import { FeedUrls } from './feed.urls';\nlet Parser = require('rss-parser');\n\n\nexport class RedditRSSParser {\n  private readonly CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\"\n  private readonly _feedUrls\n  private readonly _parser\n\n  constructor() {\n    this._feedUrls = FeedUrls\n    this._parser = new Parser()\n  }\n\n  public getFeedData(){\n    return  this.parseUrls()\n  }\n\n  private async parseUrls() {\n    const rssPromises: Promise<unknown>[] = []\n\n    this._feedUrls.forEach(async (feedUrl: string) => {\n      rssPromises.push(\n        new Promise(async (resolve, reject) => {\n          try {\n            await this._parser.parseURL(`${this.CORS_PROXY}${feedUrl}`)\n            resolve()\n          } catch (error) {\n            reject(error)\n          }\n        })\n      )\n    });\n\n    await Promise.all(rssPromises)\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"7761c8bd7bc78f5715133686dc1649ac","cacheData":{"env":{}}}