{"id":"app.tsx","dependencies":[{"name":"/Users/florianj/Private/reddit-reader/tsconfig.json","includedInParent":true,"mtime":1565796004266},{"name":"/Users/florianj/Private/reddit-reader/package.json","includedInParent":true,"mtime":1570909417175},{"name":"react","loc":{"line":6,"column":40},"parent":"/Users/florianj/Private/reddit-reader/src/app.tsx","resolved":"/Users/florianj/Private/reddit-reader/node_modules/react/index.js"}],"generated":{"js":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = __importDefault(require(\"react\"));\n\nexports.App = props => {\n  // let parser = new RedditRSSParser();\n  // let feed =parser.getFeedData()\n  // useEffect(() => {\n  //   async function getFeedData() {\n  //     feed =\n  //     console.log(feed.title);\n  //     feed.items.forEach((item: any) => {\n  //       console.log(item.title + ':' + item.link)\n  //     })\n  //   }\n  //   getFeedData()\n  // }, [])\n  return react_1.default.createElement(\"div\", null, \"test\");\n};"},"sourceMaps":{"js":{"mappings":[{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":0}},{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":6}},{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":13}},{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":16}},{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":31}},{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":32}},{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":39}},{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":40}},{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":47}},{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":48}},{"source":"app.tsx","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":49}},{"source":"app.tsx","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":0}},{"source":"app.tsx","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":7}},{"source":"app.tsx","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":8}},{"source":"app.tsx","name":null,"original":{"line":5,"column":13},"generated":{"line":15,"column":11}},{"source":"app.tsx","name":null,"original":{"line":5,"column":30},"generated":{"line":15,"column":14}},{"source":"app.tsx","name":null,"original":{"line":5,"column":29},"generated":{"line":15,"column":19}},{"source":"app.tsx","name":null,"original":{"line":5,"column":39},"generated":{"line":15,"column":23}},{"source":"app.tsx","name":null,"original":{"line":7,"column":2},"generated":{"line":16,"column":0}},{"source":"app.tsx","name":null,"original":{"line":8,"column":2},"generated":{"line":17,"column":0}},{"source":"app.tsx","name":null,"original":{"line":10,"column":2},"generated":{"line":18,"column":0}},{"source":"app.tsx","name":null,"original":{"line":11,"column":2},"generated":{"line":19,"column":0}},{"source":"app.tsx","name":null,"original":{"line":12,"column":2},"generated":{"line":20,"column":0}},{"source":"app.tsx","name":null,"original":{"line":13,"column":2},"generated":{"line":21,"column":0}},{"source":"app.tsx","name":null,"original":{"line":15,"column":2},"generated":{"line":22,"column":0}},{"source":"app.tsx","name":null,"original":{"line":16,"column":2},"generated":{"line":23,"column":0}},{"source":"app.tsx","name":null,"original":{"line":17,"column":2},"generated":{"line":24,"column":0}},{"source":"app.tsx","name":null,"original":{"line":18,"column":2},"generated":{"line":25,"column":0}},{"source":"app.tsx","name":null,"original":{"line":20,"column":2},"generated":{"line":26,"column":0}},{"source":"app.tsx","name":null,"original":{"line":21,"column":2},"generated":{"line":27,"column":0}},{"source":"app.tsx","name":null,"original":{"line":23,"column":2},"generated":{"line":28,"column":0}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":9}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":16}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":17}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":24}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":25}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":38}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":39}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":44}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":46}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":50}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":52}},{"source":"app.tsx","name":null,"original":{"line":23,"column":9},"generated":{"line":28,"column":58}},{"source":"app.tsx","name":null,"original":{"line":23,"column":2},"generated":{"line":28,"column":59}},{"source":"app.tsx","name":null,"original":{"line":24,"column":1},"generated":{"line":29,"column":0}},{"source":"app.tsx","name":null,"original":{"line":5,"column":13},"generated":{"line":29,"column":1}}],"sources":{"app.tsx":"import React, { useEffect } from 'react'\nimport { RedditRSSParser } from '~parser';\n\n\nexport const App: React.FC = (props) => {\n\n  // let parser = new RedditRSSParser();\n  // let feed =parser.getFeedData()\n\n  // useEffect(() => {\n  //   async function getFeedData() {\n  //     feed =\n  //     console.log(feed.title);\n\n  //     feed.items.forEach((item: any) => {\n  //       console.log(item.title + ':' + item.link)\n  //     })\n  //   }\n\n  //   getFeedData()\n  // }, [])\n\n  return <div>test</div>\n}\n"},"lineCount":null}},"error":null,"hash":"62d6cb48f123040b9c1e466d8368c94d","cacheData":{"env":{}}}